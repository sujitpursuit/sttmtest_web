# STTM Impact Analysis Tool - Git Ignore File

# ==============================================================================
# Python
# ==============================================================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# ==============================================================================
# STTM Project Specific
# ==============================================================================

# Virtual Environment (if not in standard location)
sttm_venv/
.sttm_venv/

# Configuration files with sensitive data
*_config_local.json
*_secrets.json
*_private.json

# Large test data files (keep sample files, ignore large datasets)
/test_data/large/
/test_data/performance/
*_large_dataset.*
*_perf_test.*

# Generated reports and outputs (keep templates, ignore generated files)
/output/
/output_files/
/reports/
/input_files/
*_analysis_report_*.json
*_analysis_report_*.html
*_analysis_report_*.xlsx
*_generated_*.md

# Temporary analysis files
temp_*.json
temp_*.xlsx
temp_*.csv
temp_analysis/

# Log files (keep log configuration, ignore actual logs)
*.log
logs/
log_output/
sttm_analysis.log*

# Cache directories
.cache/
cache/
__cache__/

# IDE and Editor specific files
.vscode/settings.json
.vscode/launch.json
.vscode/.ropeproject
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# ==============================================================================
# Excel and Office files
# ==============================================================================

# Temporary Excel files
~$*.xlsx
~$*.xls
~$*.csv
.~lock.*

# Excel backup files  
*.xlk
*.bak

# ==============================================================================
# Archive and compressed files
# ==============================================================================

*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

# ==============================================================================
# Development and debugging
# ==============================================================================

# Profiling output
*.prof
*.lprof

# Debug files
debug/
*.debug
debug_output/

# Testing temporary files
test_temp/
testing_output/
mock_data_generated/

# Performance benchmarks
benchmark_results/
perf_*.txt

# ==============================================================================
# Documentation builds
# ==============================================================================

# Sphinx
_build/
_static/
_templates/

# MkDocs
site/

# ==============================================================================
# Project specific patterns
# ==============================================================================

# Keep sample data but ignore large datasets
# Keep: STTM_DIFF.json, QTEST_STTM.xlsx (small samples)
# Ignore: Large production datasets
*_prod_data.*
*_production.*
*_large.*

# Keep configuration templates but ignore local configs
# Keep: sttm_config.json (template)
# Ignore: sttm_config_local.json (local overrides)
*_local.json
*_dev.json
*_staging.json
*_prod.json

# Keep test files but ignore generated test outputs
# Keep: test_*.py
# Ignore: Generated test reports and temporary test data
test_output/
test_results/
generated_test_data/

# ==============================================================================
# Notes for developers
# ==============================================================================

# This .gitignore is designed for the STTM Impact Analysis Tool
# 
# INCLUDED (will be committed):
# - Source code (*.py)
# - Sample data files (STTM_DIFF.json, QTEST_STTM.xlsx)  
# - Configuration templates (sttm_config.json)
# - Documentation (*.md)
# - Requirements (requirements.txt)
# - Tests (test_*.py)
# 
# EXCLUDED (will be ignored):
# - Virtual environments (venv/)
# - Generated reports and outputs
# - Log files
# - IDE settings
# - Temporary files
# - Large datasets
# - Local configuration overrides
#
# To force add an ignored file: git add -f filename
# To check what files are ignored: git status --ignored